
I'm a fifth generation Californian who's picked up a few of the habits of the region, among them surfing and computer programming. What does this mean? Having a foot in both worlds gives me a sense of balance and perspective. Beyond that, surfing has influenced my software coding and future interests in ways I never expected. I try to code like a surfer, with bravado and panache. 


Now, some may ask, "Programming with panache? Isn't that an oxymoron? Since when did programmers, i.e. nerdy Poindexter-guys, have any flair?" But the surprising majority of coders do! Surfing or no, computer scientists are engaging and passionate people – really, they are poets of logic who write words that have the value of a thousand pictures. In our world view, each line of code is not only a cog in a vast and elegant machine but a dynamic, flowing brush stroke in a painting that never dries. A program must not only efficiently solve the problem at hand, but to be truly optimal, its structure must be cleanly expandable to accommodate future challenges. And this finely crafted, adaptable solution is (to all who work to comprehend it) as beautiful as it is intriguing, and worth every moment of brainwork and sleep it costs to find it.


This culture of dedication, aestheticism, and internal adventure characterizes the first world from which I come. The second world is surfing. It demands a similar level of intense focus, but its excitement and appeal are more immediate and visceral. Dropping into a 7-foot barreling wave is like riding a standup liquid rollercoaster that you control (or if you fall, it's like being a cockroach in a trash compactor). But it is for more than just the sheer thrill of the ride that I paddle out into the lineup whenever I can. Surfing both requires and induces a contemplative state of mind. As you sit among the outside swells, the shore winking in and out of sight in the muffling grayness of the morning mist, the steadfast constructs of society become transient and your thoughts branch out unfettered. If you've hit a wall with a programming problem, it often melts away in the water. 


Furthermore, being immersed (quite literally) in nature provides inspiration. My project for the Intel Science Talent Search involved developing a microchip that could very quickly find the shortest route between two points. Where did the algorithm underlying it come from? I realized that the patterns made by the rivulets of water running down my surfboard mirrored those traversed by parallel signals in a delay network. Not only was the resulting algorithm much faster than the traditional approach, but this thought process led me to derive an efficient solution to an even more difficult computational problem.


So what does all this mean for my future? Had I never surfed, I likely still would love to program. But because I do surf, I additionally harbor a fascination with alternative computing paradigms inspired by nature, and I seek to continue to research them. As information theorist Seth Lloyd comments, the universe itself is fundamentally a giant quantum computer – every instant, it resolves staggeringly difficult computational problems. I would like to do my part to help harness this awesome power for the benefit of humanity.


"I'm available all summer." "I'm interested." "I'm in!" "I would love to do this, Jacob. I'm ready to go!"


With these enthusiastic words, a cadre of brilliant high school computer scientists pledged their support of an "interesting idea" I had proposed: I was going to hire them. It was the beginning of the summer following my sophomore year and the third anniversary of my first professional Web development job. Some irksome circumstances had arisen. Not only had my freelance work expanded to the point where I had more clients than time, but my talented and capable friends, in their quest for work, had largely been stuck bagging groceries at the local Safeway.


Reflecting back upon the beginnings of my own professional career, I saw an opportunity… In middle school, I taught myself Web programming by reading every manual and tutorial I could find and reverse-engineering websites, sometimes improving upon the original code. By aggregating information from disparate sources (and enjoying myself in the process), I quickly became fluent in a number of major Web technologies, and more importantly, I learned how to rapidly learn. Shortly, I found myself hired to develop a website for a biotech startup company, Biomatrica, and my Web development business expanded from there.


In high school, I met motivated computer science students who had deep specialized knowledge but not the complete technical and business skillset necessary to enter the professional world. This gave me an idea. They wanted to learn what I had learned and I implicitly possessed a curriculum to teach it: I simply had to retrace the steps of my own self-education, minus the stumbling blocks. So, sophomore year, I co-founded the Torrey Pines Programming Club, a venue in which I could both teach this material and learn from others. By June, our members were fluent in JavaScript, PHP, AJAX, XHTML, and CSS – some of the most important Web languages.


Fortuitously, it was just about this time that my business needed extra help. That's when I sent out the e-mail to which people responded: "I'm in!" Things progressed quickly. I matched programmers to projects and developed a modular, server-side framework that would allow everybody's applications to cleanly interface with one another. Over the following months, we delivered several high-end websites and applications to our clients at excellent prices. We continue to build sites together today, but this utilitarian end is not what makes me proud. It's that these people are now using the knowledge we built together to find their own paths to further success! Some have gone on to be hired by other clients, and some have started their own entrepreneurial websites. What is most meaningful to me, I realize, is that my actions have empowered others in ways that are leaving a positive impression on the world.


Enlist the expert help of one of our Ivy-League editors. Get individual coaching to make your essay stand out among the crowd. Learn more.


Keep reading more UC ​Berkeley admissions essays — you can't be too prepared!


Previous EssayNext Essay


Tip: Use the ← → keys to navigate!


This essay comes from AdmitSphere who kindly allowed it to be republished here.


Data is not information, information is not knowledge, knowledge is not understanding, understanding is not wisdom. Clifford Stoll


That's easy — it's the best way to study for AP classes and AP exams! StudyNotes offers fast, free study tools for AP students. Our AP study guides, practice tests, and notes are the best on the web because they're contributed by students and teachers like yourself. Always 100% free.


Follow @StudyNotesApp on Twitter!

